angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/typescript/angular-schema-form-typescript.html",'<div ng-class="{\'has-error\': hasError()}"><label ng-show="showTitle()">{{form.title}}</label><div ng-model="$$value$$" type-script-directive=""><input ng-model="$$value$$"><button type="button" ng-click="alert(\'WHAT THE FUUCK\');">camelCase it</button></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span><br><span ng-show="form.some_setting">The some setting-setting is true for the model at $$value$$!</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,r){var o=function(t,o,i){if("string"===o.type&&"typescript"==o.format){var s=e.stdFormObj(t,o,i);return s.key=i.path,s.type="typescript",i.lookup[r.stringify(i.path)]=s,s}};e.defaults.string.unshift(o),t.addMapping("bootstrapDecorator","typescript","directives/decorators/bootstrap/typescript/angular-schema-form-typescript.html")}]);var typescriptController=function(){function e(e,t){var r=this;this.$scope=e,this.camelCase=function(e){return e.toLowerCase().replace(/[- ](.)/g,function(e,t){return t.toUpperCase()})},this.makeCamelCase=function(){var e=r.directiveScope.ngModel[r.directiveScope.ngModel.length-1];e.$modelValue&&e.$setViewValue(r.camelCase(e.$modelValue))},console.log("Initiating the process controller"+e.toString()),this.directiveScope=e}return e}();angular.module("schemaForm").directive("typeScriptDirective",function(){return{require:["ngModel"],restrict:"A",scope:!1,controller:["$scope",typescriptController],link:function(e,t,r,o){e.ngModel=o}}});