angular.module("schemaForm").run(["$templateCache",function(r){r.put("directives/decorators/bootstrap/basic/angular-schema-form-basic.html",'<div ng-class="{\'has-error\': hasError()}"><label ng-show="showTitle()">{{form.title}}</label><div basic=""><input name="input_field" ng-model="$$value$$"> <button type="button" ng-click="makeCamelCase()">camelCase it</button></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(r,e,a){var t=function(e,t,o){if("string"===t.type&&"basic"==t.format){var s=r.stdFormObj(e,t,o);return s.key=o.path,s.type="basic",o.lookup[a.stringify(o.path)]=s,s}};r.defaults.string.unshift(t),e.addMapping("bootstrapDecorator","basic","directives/decorators/bootstrap/basic/angular-schema-form-basic.html"),e.createDirective("basic","directives/decorators/bootstrap/basic/angular-schema-form-basic.html")}]);var basicControllerFunction=function(r){r.camelCase=function(r){return r.toLowerCase().replace(/[- ](.)/g,function(r,e){return e.toUpperCase()})},r.makeCamelCase=function(){value=r.formCtrl.$viewValue,value&&r.formCtrl.$setViewValue(r.camelCase(value))}};angular.module("schemaForm").directive("basic",function(){return{require:["ngModel"],restrict:"A",controller:basicControllerFunction}});