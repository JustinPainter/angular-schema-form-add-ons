angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/camelcase/angular-schema-form-camelcase.html",'<div ng-class="{\'has-error\': hasError()}"><label ng-show="showTitle()">{{form.title}}</label><div ng-model="$$value$$" camel-case-directive=""><input ng-model="$$value$$"><button type="button" ng-click="makeCamelCase()">camelCase it</button></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span><br><span ng-show="form.some_setting">The some setting-setting is true for the model at $$value$$!</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,a,r){var o=function(a,o,t){if("string"===o.type&&"camelcase"==o.format){var s=e.stdFormObj(a,o,t);return s.key=t.path,s.type="camelcase",t.lookup[r.stringify(t.path)]=s,s}};e.defaults.string.unshift(o),a.addMapping("bootstrapDecorator","camelcase","directives/decorators/bootstrap/camelcase/angular-schema-form-camelcase.html"),a.createDirective("camelcase","directives/decorators/bootstrap/camelcase/angular-schema-form-camelcase.html")}]);var camelCaseControllerFunction=function(e){e.camelCase=function(e){return e.toLowerCase().replace(/[- ](.)/g,function(e,a){return a.toUpperCase()})},e.makeCamelCase=function(){var a=e.ngModel[e.ngModel.length-1];a.$modelValue&&a.$setViewValue(e.camelCase(a.$modelValue))}};angular.module("schemaForm").directive("camelCaseDirective",function(){return{require:["ngModel"],restrict:"A",scope:!1,controller:["$scope",camelCaseControllerFunction],link:function(e,a,r,o){e.ngModel=o}}});